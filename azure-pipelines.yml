
trigger:
  branches:
    include:
    - 'master'
    - 'hotfix/*'

pr:
  autoCancel: 'true'
  branches:
    include:
    - 'master'
variables:
  extension_id: 'git-buildtasks'
  extension_name: 'git tasks'
  extension_publisher: 'sander-aernouts'
stages:
- stage: build
  displayName: 'Build'
  jobs:
  - job: 'compile'
    displayName: 'Compile extension'
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: 'true'
    steps:
    - powershell: |
        $v = Get-Content .\version.json | ConvertFrom-Json | select -first 1
        $version = ("{0}.{1}.{2}" -f $v.major, $v.minor, $env:BUILD_BUILDID)
        echo "##vso[build.updatebuildnumber]$version"
      displayName: 'set version'
      errorActionPreference: stop
    - task: NodeTool@0
      inputs:
        versionSpec: '9.x'

    - task: Npm@1
      displayName: 'npm install: root'
      inputs:
        command: install

    - task: Npm@1
      displayName: 'npm install: createpullrequest'
      inputs:
        command: install
        workingDir: createpullrequest

    - task: Npm@1
      displayName: 'npm run compile'
      inputs:
        command: custom
        verbose: false
        customCommand: 'run compile'

    - task: Npm@1
      displayName: 'npm prune: root'
      inputs:
        command: custom
        verbose: false
        customCommand: 'prune --production'

    - task: Npm@1
      displayName: 'npm prune: createpullrequest'
      inputs:
        command: custom
        verbose: false
        customCommand: 'prune --production'
        workingDir: createpullrequest

    - task: CopyFiles@2
      displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
      inputs:
        Contents: |
          **/*
          !.git/**/*
          !.git*
          !azure-pipelines.yml
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@0
      displayName: 'Publish Artifact: drop'
      inputs:
          artifactName: 'drop'
          targetPath: '$(Build.ArtifactStagingDirectory)'
- stage: e2e
  variables:
    extension_tag: '-private-preview'
    extension_name_postfix: ' (private preview)'
    extension_share_with: 'sandera-vsts-tasks-test'

  displayName: 'End to End'
  jobs:
  - deployment: deploy_private
    displayName: 'Deploy to Azure Marketplace (private)'
    environment: 'Visual Studio Marketplace (private)'
    pool:
      vmImage: 'Ubuntu-16.04'
    continueOnError: 'false'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@1
            displayName: 'Use Node CLI for Azure DevOps (tfx-cli): v0.6.x'
          - task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishExtension@1
            displayName: 'Publish Extension'
            inputs:
              connectedServiceName: 'visual studio marketplace'
              rootFolder: '$(System.DefaultWorkingDirectory)/sanderaernouts.vsts-git-tasks/drop'
              publisherId: '$(extension_publisher)'
              extensionId: '$(extension_id)'
              extensionTag: '$(extension_tag)'
              extensionName: '$(extension_name)$(extension_name_postfix)'
              extensionVersion: '$(Build.BuildNumber)'
              extensionVisibility: private
              extensionPricing: free
              shareWith: '$(extension_share_with)'  
          - task: IsAzureDevOpsExtensionValid@2
            inputs:
              connectTo: 'VsTeam'
              connectedServiceName: 'visual studio marketplace'
              method: 'id'
              publisherId: '$(extension_publisher)'
              extensionId: '$(extension_id)'
              extensionTag: '$(extension_tag)'
              extensionVersion: '$(extension_version)'
              maxRetries: '10'
              minTimeout: '2'
  - deployment: run_tests
    displayName: 'Run end-to-end tests'
    environment: 'Visual Studio Marketplace (private)'
    pool:
      vmImage: 'Ubuntu-16.04'