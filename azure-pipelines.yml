# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: 'Ubuntu 16.04'

trigger:
  batch: true

steps:

- task: NodeTool@0
  inputs:
    versionSpec: '9.x'
- script: >
    npx -p semantic-release
    -p @semantic-release/git
    -p semantic-release-ado
    semantic-release
    --branch $(Build.SourceBranchName)
    --dry-run
    --prepare
  env: { GH_TOKEN: $(GitHubToken) }
  displayName: 'Semantic release'

- powershell: |
    echo "##vso[task.setvariable variable=versionNumber;isOutput=true]$(nextRelease)"
  name: setOutputVar

- task: Npm@1
  displayName: 'npm install: root'
  inputs:
    command: install

- task: Npm@1
  displayName: 'npm install: vfs-for-git'
  inputs:
    command: install
    workingDir: vfs-for-git

- task: Npm@1
  displayName: 'npm run compile'
  inputs:
    command: custom
    verbose: false
    customCommand: 'run compile'

- task: Npm@1
  displayName: 'npm prune: root'
  inputs:
    command: custom
    verbose: false
    customCommand: 'prune --production'

- task: Npm@1
  displayName: 'npm prune: vfs-for-git'
  inputs:
    command: custom
    verbose: false
    customCommand: 'prune --production'
    workingDir: vfs-for-git

- task: CopyFiles@2
  displayName: 'Copy Files to: $(Build.ArtifactStagingDirectory)'
  inputs:
    Contents: |
     **/*
     !.git/**/*
     !.git*
     !azure-pipelines.yml
     
    TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: drop'

